[
    {
        "id": "84a1a3d806bd7fe0",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e4bb5e0df95bd7f5",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc1e134d11102e58",
        "type": "modbus-client",
        "name": "USB-SERIAL",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "115200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ed0368e98cc467de",
        "type": "ui_tab",
        "name": "Visualizar Datos",
        "icon": "leaf",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6ac2b3d1e70a9d0d",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Dashboard CUDAR",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 24,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c371dadc8bcf8e88",
        "type": "ui_group",
        "name": "Reproductor de Esquejes",
        "tab": "ed0368e98cc467de",
        "order": 1,
        "disp": true,
        "width": 22,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e06a744f44db421c",
        "type": "sqlitedb",
        "db": "/home/pi/esquejes.sqlite",
        "mode": "RWC"
    },
    {
        "id": "8eed8f3f45705613",
        "type": "ui_spacer",
        "z": "e4bb5e0df95bd7f5",
        "name": "spacer",
        "group": "c371dadc8bcf8e88",
        "order": 2,
        "width": 16,
        "height": 1
    },
    {
        "id": "eefe72d8de19af9f",
        "type": "function",
        "z": "84a1a3d806bd7fe0",
        "name": "ModbusDecoder",
        "func": "/*\nThe function readInt16x10 converts a 16-bit signed integer value to a floating-point value divided by 10. \nIt handles negative values by subtracting 65536 from them. \nHowever, there is a unique case when the value -1 is encoded as -0.1 in Int16x10 format.\n\nTo handle this case, we explicitly check if the input value is -1. \nIf it is, we return -0.1 instead of the default behavior of returning 65535. \nThis ensures that the correct value is returned when -1 is encoded as -0.1.\n\nExample usage:\nconst value = -1;\nconst result = readInt16x10(value); // Returns -0.1\n*/\n\nfunction readInt16x10(value) {\n    if (value === 65535) {\n        return -0.1;\n    }\n\n    if (value > 32767) {\n        value = value - 65536;\n    }\n\n    return value / 10.0;\n}\n\nvar buffer = msg.payload.data;\n\n//Buffer has 19 registers, representing the following:\n\n/*\ntypedef struct\n{\n    int16_t TempSustrato1;        //!< Temperature of the substrate 1. 0.1 degree resolution. \n    int16_t HumSustrato1;         //!< Humidity of the substrate 1. 1 % resolution. \n    int16_t TempAmbiente1;        //!< Temperature of the environment 1. 0.1 degree resolution. \n    int16_t HumAmbiente1;         //!< Humidity of the environment 1. 1 % resolution. \n    int16_t HumFol1;              //!< Humidity of the leaf 1. 1 % resolution. \n    int16_t TempSustrato2;        //!< Temperature of the substrate 2. 0.1 degree resolution. \n    int16_t HumSustrato2;         //!< Humidity of the substrate 2. 1 % resolution. \n    int16_t TempAmbiente2;        //!< Temperature of the environment 2. 0.1 degree resolution. \n    int16_t HumAmbiente2;         //!< Humidity of the environment 2. 1 % resolution. \n    int16_t HumFol2;              //!< Humidity of the leaf 2. 1 % resolution. \n    int16_t TempExterior;         //!< Temperature of the exterior. 0.1 degree resolution. \n    int16_t HumExterior;          //!< Humidity of the exterior. 1 % resolution. \n    uint16_t LuzExterior;         //!< Light of the exterior. 1 W/M2 resolution.\n    int16_t TempAgua;             //!< Temperature of the water. 0.1 degree resolution. \n    int16_t NivelAgua;            //!< Level of the water. 1 % resolution. \n    uint16_t PotenciaConsumida;   //!< Power consumed. 1 W resolution.\n    uint16_t Corriente_Consumida; //!< Current consumed. 1 A resolution.\n    uint16_t VoltajeConsumido;    //!< Voltage consumed. 1 V resolution.\n} holding_reg_params_t;\n*/\n\n//Read data and store into a new object json-like\n\n// get current timestamp from system\nvar timestamp_date = Date.now();\n//YYYY-MM-DD HH:MI:SS\nvar timestamp_datetime = new Date(timestamp_date).toISOString().slice(0, 19).replace('T', ' ');\n\nvar data_Array = [\n    timestamp_datetime, //\n    readInt16x10(buffer[0]), //TempSustrato1\n    buffer[1], //HumSustrato1\n    readInt16x10(buffer[2]), //TempAmbiente1\n    buffer[3], //HumAmbiente1\n    buffer[4], //HumFol1\n    readInt16x10(buffer[5]), //TempSustrato2\n    buffer[6], //HumSustrato2\n    readInt16x10(buffer[7]), //TempAmbiente2\n    buffer[8], //HumAmbiente2\n    buffer[9], //HumFol2\n    readInt16x10(buffer[10]), //TempExterior\n    buffer[11], //HumExterior\n    buffer[12], //LuzExterior\n    buffer[13], //TempAgua\n    buffer[14], //NivelAgua\n    buffer[15], //PotenciaConsumida\n    buffer[16], //Corriente_Consumida\n    buffer[17], //VoltajeConsumido\n]\n\nvar data = [\n    { topic: \"Timestamp\", payload: data_Array[0]}, //\n    { topic: \"TempSustrato1\", payload: data_Array[1]},\n    { topic: \"HumSustrato1\", payload: data_Array[2]},\n    { topic: \"TempAmbiente1\", payload: data_Array[3]},\n    { topic: \"HumAmbiente1\", payload: data_Array[4]},\n    { topic: \"HumFol1\", payload: data_Array[5]},\n    { topic: \"TempSustrato2\", payload: data_Array[6]},\n    { topic: \"HumSustrato2\", payload: data_Array[7]}, \n    { topic: \"TempAmbiente2\", payload: data_Array[8]},\n    { topic: \"HumAmbiente2\", payload: data_Array[9]},\n    { topic: \"HumFol2\", payload: data_Array[10]},\n    { topic: \"TempExterior\", payload: data_Array[11]},\n    { topic: \"HumExterior\", payload: data_Array[12]},\n    { topic: \"LuzExterior\", payload: data_Array[13]},\n    { topic: \"TempAgua\", payload: data_Array[14]},\n    { topic: \"NivelAgua\", payload: data_Array[15]},\n    { topic: \"PotenciaConsumida\", payload: data_Array[16]},\n    { topic: \"Corriente_Consumida\", payload: data_Array[17]},\n    { topic: \"VoltajeConsumido\", payload: data_Array[18]},\n];\n\n\nvar msg = {};\n\nmsg.topic = \"INSERT INTO muestras (timestamp, TempSustrato1, HumSustrato1, TempAmbiente1, HumAmbiente1, HumFol1, TempSustrato2, HumSustrato2, TempAmbiente2, HumAmbiente2, HumFol2, TempExterior, HumExterior, LuzExterior, TempAgua, NivelAgua, PotenciaConsumida, Corriente_Consumida, VoltajeConsumido) VALUES ($timestamp, $TempSustrato1, $HumSustrato1, $TempAmbiente1, $HumAmbiente1, $HumFol1, $TempSustrato2, $HumSustrato2, $TempAmbiente2, $HumAmbiente2, $HumFol2, $TempExterior, $HumExterior, $LuzExterior, $TempAgua, $NivelAgua, $PotenciaConsumida, $Corriente_Consumida, $VoltajeConsumido)\";\nmsg.payload = data_Array;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "6cc1ca9b64bc2025",
                "95236063d080bb01",
                "923ddfc98c95b421"
            ]
        ],
        "inputLabels": [
            "ModbusData"
        ],
        "outputLabels": [
            "Timestamp",
            ""
        ]
    },
    {
        "id": "5fe32c791b57a02d",
        "type": "modbus-read",
        "z": "84a1a3d806bd7fe0",
        "name": "",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "30",
        "quantity": "19",
        "rate": "10",
        "rateUnit": "m",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "bc1e134d11102e58",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 150,
        "y": 300,
        "wires": [
            [],
            [
                "eefe72d8de19af9f"
            ]
        ]
    },
    {
        "id": "6cc1ca9b64bc2025",
        "type": "sqlite",
        "z": "84a1a3d806bd7fe0",
        "mydb": "e06a744f44db421c",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Insert into muestras",
        "x": 590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "95236063d080bb01",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 360,
        "wires": []
    },
    {
        "id": "923ddfc98c95b421",
        "type": "link out",
        "z": "84a1a3d806bd7fe0",
        "name": "NuevaMuestra",
        "mode": "link",
        "links": [
            "57cb7f364509d9f5"
        ],
        "x": 565,
        "y": 180,
        "wires": []
    },
    {
        "id": "501daf8cb1689031",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 7,
        "width": 22,
        "height": 10,
        "label": "Temperaturas de Sustrato ºC",
        "chartType": "line",
        "legend": "false",
        "xformat": "YY/MM/DD HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": true,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e506e5a3c125556f",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 8,
        "width": 22,
        "height": 5,
        "label": "Humedades de Sustrato %HR",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "73d450825d8c68b2",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 9,
        "width": 22,
        "height": 5,
        "label": "Humedades de Foliage %HR",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "9c4d44102eafc76d",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 11,
        "width": 22,
        "height": 5,
        "label": "Humedad %HR",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "237130adae08f666",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 12,
        "width": 22,
        "height": 5,
        "label": "Nivel de Agua %",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "c5353f2ff03a99fc",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 13,
        "width": 22,
        "height": 5,
        "label": "Radiación Solar W/m^2",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1110,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "274ba354eda38b20",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 14,
        "width": 22,
        "height": 5,
        "label": "Corriente A",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "a5100213482133eb",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 15,
        "width": 22,
        "height": 5,
        "label": "Voltaje V",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "54a7d988b388d7fd",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 16,
        "width": 22,
        "height": 5,
        "label": "Potencia W",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "acc256c200ebe09b",
        "type": "ui_text",
        "z": "e4bb5e0df95bd7f5",
        "group": "c371dadc8bcf8e88",
        "order": 6,
        "width": 16,
        "height": 1,
        "name": "",
        "label": "Timestamp Ultima Muestra: ",
        "format": "{{msg.payload.timestamp}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 460,
        "wires": []
    },
    {
        "id": "bd9a0fa686ecb774",
        "type": "sqlite",
        "z": "e4bb5e0df95bd7f5",
        "mydb": "e06a744f44db421c",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Read Muestras",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "8b46204691535b4e"
            ]
        ]
    },
    {
        "id": "5d94a31f5d93fab1",
        "type": "ui_date_picker",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "label": "Desde",
        "group": "c371dadc8bcf8e88",
        "order": 1,
        "width": 6,
        "height": 2,
        "passthru": true,
        "topic": "desde",
        "topicType": "str",
        "className": "",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "44afbffb25d126bf"
            ]
        ]
    },
    {
        "id": "b1460d78fafba49c",
        "type": "ui_date_picker",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "label": "Hasta",
        "group": "c371dadc8bcf8e88",
        "order": 5,
        "width": 6,
        "height": 2,
        "passthru": true,
        "topic": "hasta",
        "topicType": "str",
        "className": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "44afbffb25d126bf"
            ]
        ]
    },
    {
        "id": "ffab8b90d49c3fec",
        "type": "ui_button",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 3,
        "width": 8,
        "height": 2,
        "passthru": false,
        "label": "Aplicar",
        "tooltip": "Aplicar",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "check",
        "payload": "true",
        "payloadType": "bool",
        "topic": "apply",
        "topicType": "str",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "44afbffb25d126bf"
            ]
        ]
    },
    {
        "id": "91934db31193c495",
        "type": "ui_switch",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "label": "Actualizar automáticamente",
        "tooltip": "",
        "group": "c371dadc8bcf8e88",
        "order": 4,
        "width": 8,
        "height": 2,
        "passthru": true,
        "decouple": "false",
        "topic": "update",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "44afbffb25d126bf"
            ]
        ]
    },
    {
        "id": "fca479973871e01a",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "FirstStart",
        "func": "// Código para obtener el timestamp actual al iniciar el tablero\nvar msg1 = {};\nvar now = new Date();\n\n// Ajustar a las 23:59:59\nnow.setHours(23);\nnow.setMinutes(59);\nnow.setSeconds(59);\n\nmsg1.topic = \"timestamp_actual\";\nmsg1.payload = now.getTime();\n\n// Código para obtener el timestamp de una semana atrás\nvar msg2 = {};\nvar unaSemanaAtras = new Date(Date.now() - (7 * 24 * 60 * 60 * 1000)); // Resta 7 días en milisegundos\n\n// Ajustar a las 00:00:01\nunaSemanaAtras.setHours(0);\nunaSemanaAtras.setMinutes(0);\nunaSemanaAtras.setSeconds(1);\n\nmsg2.topic = \"timestamp_semana_anterior\";\nmsg2.payload = unaSemanaAtras.getTime();\n\nvar msg3 = {};\nmsg3.topic = \"update\";\nmsg3.payload = false;\n\nreturn [msg1, msg2, msg3];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 120,
        "wires": [
            [
                "b1460d78fafba49c"
            ],
            [
                "5d94a31f5d93fab1"
            ],
            [
                "91934db31193c495"
            ]
        ]
    },
    {
        "id": "75402f9d3e67f280",
        "type": "ui_ui_control",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "events": "connect",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "fca479973871e01a"
            ]
        ]
    },
    {
        "id": "157ece44bb6785d6",
        "type": "debug",
        "z": "e4bb5e0df95bd7f5",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 140,
        "wires": []
    },
    {
        "id": "44afbffb25d126bf",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "Hold & Send",
        "func": "// Obtener el contexto global\nvar contextoGlobal = global.get(\"contextoGlobal\") || {};\n\nvar return_date = false;\n\n// Nodo para procesar y almacenar entradas\nif (msg.topic === \"desde\") {\n    contextoGlobal.desdeTimestamp = msg.payload;\n} else if (msg.topic === \"hasta\") {\n    contextoGlobal.hastaTimestamp = msg.payload;\n    if (contextoGlobal.updateBoolean === true)\n    {\n        return_date = true;\n    }\n} else if (msg.topic === \"update\") {\n    contextoGlobal.updateBoolean = msg.payload;\n    if (msg.payload === true) {\n        return_date = true;\n    }\n} else if (msg.topic === \"apply\" || msg.payload === \"newSample\") {\n    // Combinar y enviar el mensaje\n    var combinedMsg = {\n        topic: \"mostrar\",\n        payload: {\n            desde: contextoGlobal.desdeTimestamp,\n            hasta: contextoGlobal.hastaTimestamp,\n            update: contextoGlobal.updateBoolean\n        }\n    };\n    \n    return combinedMsg;\n}\n\n// Guardar el contexto global\nglobal.set(\"contextoGlobal\", contextoGlobal);\n\nif (return_date) {\n    var ret = {};\n    ret.topic = \"hasta\";\n    ret.payload = Date.now();\n    return ret;\n}\n\nreturn null; // No hacer nada si no es \"apply\"\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "f7837ebcca8ba7c7",
                "358044cf51c8b7d8"
            ]
        ]
    },
    {
        "id": "f7837ebcca8ba7c7",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "Filtrar: Hasta",
        "func": "// Verificar si el mensaje cumple con la condición\nif (msg.topic === \"hasta\") {\n    return msg;\n} else {\n    return null; // Descartar mensajes con otros temas\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 40,
        "wires": [
            [
                "b1460d78fafba49c"
            ]
        ]
    },
    {
        "id": "358044cf51c8b7d8",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "Filtrar: mostrar",
        "func": "// Verificar si el mensaje cumple con la condición\nif (msg.topic === \"mostrar\") {\n    return msg;\n} else {\n    return null; // Descartar mensajes con otros temas\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 200,
        "wires": [
            [
                "157ece44bb6785d6",
                "2023e30e173f8938"
            ]
        ]
    },
    {
        "id": "57cb7f364509d9f5",
        "type": "link in",
        "z": "e4bb5e0df95bd7f5",
        "name": "NuevaMuestra",
        "links": [
            "923ddfc98c95b421"
        ],
        "x": 115,
        "y": 300,
        "wires": [
            [
                "aad7034baa4fbee6"
            ]
        ]
    },
    {
        "id": "aad7034baa4fbee6",
        "type": "delay",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 220,
        "y": 300,
        "wires": [
            [
                "1be51efc78560a53"
            ]
        ]
    },
    {
        "id": "1be51efc78560a53",
        "type": "trigger",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "op1": "newsample",
        "op2": "",
        "op1type": "str",
        "op2type": "nul",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 140,
        "y": 360,
        "wires": [
            [
                "288f8c126ef41781"
            ]
        ]
    },
    {
        "id": "288f8c126ef41781",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "CheckUpdateEnabled",
        "func": "var contextoGlobal = global.get(\"contextoGlobal\") || {};\n\nvar reply = {};\n\nreply.payload = \"newSample\"\n\nif (contextoGlobal.updateBoolean) {\n    return reply;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "44afbffb25d126bf"
            ]
        ]
    },
    {
        "id": "d143184327f9a94e",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "QueryGen",
        "func": "// Verificar si el mensaje tiene el formato esperado\nif (msg.topic === \"mostrar\" && msg.payload && msg.payload.desde && msg.payload.hasta) {\n    // Obtener los valores de desde, hasta y update del mensaje\n    var desdeTimestamp = msg.payload.desde;\n    var hastaTimestamp = msg.payload.hasta;\n    var updateBoolean = msg.payload.update || false; // Si no se proporciona, asumir false\n\n    // Construir la consulta SQL\n    var query = `SELECT timestamp, TempSustrato1, TempSustrato2 FROM muestras WHERE timestamp BETWEEN '${new Date(desdeTimestamp).toISOString()}' AND '${new Date(hastaTimestamp).toISOString()}'`;\n\n    // Enviar el mensaje con la consulta SQL\n    var queryMsg = {\n        topic: query,\n    };\n\n    return queryMsg;\n} else {\n    return null; // Descartar mensajes que no cumplen con el formato esperado\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 500,
        "wires": [
            [
                "327a7f7dda796add",
                "bd9a0fa686ecb774"
            ]
        ]
    },
    {
        "id": "327a7f7dda796add",
        "type": "debug",
        "z": "e4bb5e0df95bd7f5",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 600,
        "wires": []
    },
    {
        "id": "c814f83a6d5ba4a0",
        "type": "ui_chart",
        "z": "e4bb5e0df95bd7f5",
        "name": "",
        "group": "c371dadc8bcf8e88",
        "order": 10,
        "width": 22,
        "height": 5,
        "label": "Temperatura ºC",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1080,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2023e30e173f8938",
        "type": "trigger",
        "z": "e4bb5e0df95bd7f5",
        "name": "CLEAR CHART",
        "op1": "[]",
        "op2": "",
        "op1type": "json",
        "op2type": "pay",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 2,
        "x": 760,
        "y": 320,
        "wires": [
            [
                "501daf8cb1689031",
                "e506e5a3c125556f",
                "c814f83a6d5ba4a0",
                "9c4d44102eafc76d",
                "73d450825d8c68b2",
                "237130adae08f666",
                "c5353f2ff03a99fc",
                "54a7d988b388d7fd",
                "274ba354eda38b20",
                "a5100213482133eb"
            ],
            [
                "d143184327f9a94e"
            ]
        ]
    },
    {
        "id": "8b46204691535b4e",
        "type": "function",
        "z": "e4bb5e0df95bd7f5",
        "name": "Procesar",
        "func": "var input = msg.payload;\n\n// Inicializar la estructura de salida\nvar output = [{\n    \"series\": [\"TempSustrato1\"],\n    \"data\": []\n}];\n\n// Procesar cada elemento en el array de entrada\nfor (var i = 0; i < input.length; i++) {\n    var timestamp = Date.parse(input[i].timestamp);\n\n    // Crear un objeto en el formato deseado\n    var dataPoint = [\n        { \"x\": timestamp, \"y\": input[i].TempSustrato1 }\n    ];\n\n    // Agregar el objeto al array de salida\n    output[0].data.push(dataPoint);\n}\n\n// Enviar el mensaje transformado\nmsg.payload = output;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 480,
        "wires": [
            [
                "501daf8cb1689031"
            ]
        ]
    }
]