[
    {
        "id": "84a1a3d806bd7fe0",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bc1e134d11102e58",
        "type": "modbus-client",
        "name": "USB-SERIAL",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "115200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "eefe72d8de19af9f",
        "type": "function",
        "z": "84a1a3d806bd7fe0",
        "name": "function 1",
        "func": "function readInt16x100(value) {\n    if (value > 32767) {\n        value = value - 65536;\n    }\n\n    return value / 100.0;\n}\n\nfunction readUint16x100(value) {\n    return value / 100.0;\n}\n\n\nfunction readUint32(MSR, LSR) {\n    return (MSR << 16) + LSR;\n}\n\nfunction readInt32(MSR, LSR) {\n    var value = (MSR << 16) + LSR;\n\n    if (value > 2147483647) {\n        value = value - 4294967296;\n    }\n\n    return value;\n}\n\nvar buffer = msg.payload.data;\n\n//Buffer has 20 bytes, representing the following:\n\n/*\ntypedef struct\n{\n    uint32_t timestamp;           //!< Timestamp of the system. 1 second resolution.\n    int16_t TempSustrato1;        //!< Temperature of the substrate 1. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t HumSustrato1;         //!< Humidity of the substrate 1. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t TempAmbiente1;        //!< Temperature of the environment 1. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t HumAmbiente1;         //!< Humidity of the environment 1. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t HumFol1;              //!< Humidity of the leaf 1. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t TempSustrato2;        //!< Temperature of the substrate 2. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t HumSustrato2;         //!< Humidity of the substrate 2. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t TempAmbiente2;        //!< Temperature of the environment 2. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t HumAmbiente2;         //!< Humidity of the environment 2. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t HumFol2;              //!< Humidity of the leaf 2. 0.01 % resolution. (Register is multiplied by 100)\n    int16_t TempExterior;         //!< Temperature of the exterior. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t HumExterior;          //!< Humidity of the exterior. 0.01 % resolution. (Register is multiplied by 100)\n    uint16_t LuzExterior;         //!< Light of the exterior. 0.1 W/M2 resolution. (Register is multiplied by 10)\n    int16_t TempAgua;             //!< Temperature of the water. 0.01 degree resolution. (Register is multiplied by 100)\n    int16_t NivelAgua;            //!< Level of the water. 0.01 % resolution. (Register is multiplied by 100)\n    uint16_t PotenciaConsumida;   //!< Power consumed. 1 W resolution.\n    uint16_t Corriente_Consumida; //!< Current consumed. 0.1 A resolution. (Register is multiplied by 10)\n    uint16_t VoltajeConsumido;    //!< Voltage consumed. 0.1 V resolution. (Register is multiplied by 10)\n} holding_reg_params_t;\n*/\n\n//Read data and store into a new object json-like\n\nvar data = [\n    { topic: \"Timestamp\", payload: readUint32(buffer[0], buffer[1])},\n    { topic: \"TempSustrato1\", payload: readInt16x100(readUint16x100(buffer[2]))},\n    { topic: \"HumSustrato1\", payload: readInt16x100(readUint16x100(buffer[3]))},\n    { topic: \"TempAmbiente1\", payload: readInt16x100(readUint16x100(buffer[4]))},\n    { topic: \"HumAmbiente1\", payload: readInt16x100(readUint16x100(buffer[5]))},\n    { topic: \"HumFol1\", payload: readInt16x100(readUint16x100(buffer[6]))},\n    { topic: \"TempSustrato2\", payload: readInt16x100(readUint16x100(buffer[7]))},\n    { topic: \"HumSustrato2\", payload: readInt16x100(readUint16x100(buffer[8]))},\n    { topic: \"TempAmbiente2\", payload: readInt16x100(readUint16x100(buffer[9]))},\n    { topic: \"HumAmbiente2\", payload: readInt16x100(readUint16x100(buffer[10]))},\n    { topic: \"HumFol2\", payload: readInt16x100(readUint16x100(buffer[11]))},\n    { topic: \"TempExterior\", payload: readInt16x100(readUint16x100(buffer[12]))},\n    { topic: \"HumExterior\", payload: readInt16x100(readUint16x100(buffer[13]))},\n    { topic: \"LuzExterior\", payload: readUint16x100(buffer[14]) * 10},\n    { topic: \"TempAgua\", payload: readInt16x100(readUint16x100(buffer[15]))},\n    { topic: \"NivelAgua\", payload: readInt16x100(readUint16x100(buffer[16]))},\n    { topic: \"PotenciaConsumida\", payload: buffer[17]},\n    { topic: \"Corriente_Consumida\", payload: readUint16x100(buffer[18]) * 10},\n    { topic: \"VoltajeConsumido\", payload: readUint16x100(buffer[19]) * 10},\n];\n\nreturn [data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15], data[16], data[17], data[18]];",
        "outputs": 19,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 220,
        "wires": [
            [
                "fb908caa00a627da"
            ],
            [
                "0ce7071583148d36"
            ],
            [
                "4435c292d6514a78"
            ],
            [
                "7e5a55731083fda9"
            ],
            [],
            [
                "55a9234d6c884433"
            ],
            [
                "7d2628ec12adadbc"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "fb908caa00a627da",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 100,
        "wires": []
    },
    {
        "id": "5fe32c791b57a02d",
        "type": "modbus-read",
        "z": "84a1a3d806bd7fe0",
        "name": "",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "20",
        "rate": "5",
        "rateUnit": "m",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "bc1e134d11102e58",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 490,
        "y": 220,
        "wires": [
            [],
            [
                "eefe72d8de19af9f"
            ]
        ]
    },
    {
        "id": "0ce7071583148d36",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 120,
        "wires": []
    },
    {
        "id": "4435c292d6514a78",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "7e5a55731083fda9",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 240,
        "wires": []
    },
    {
        "id": "55a9234d6c884433",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 340,
        "wires": []
    },
    {
        "id": "7d2628ec12adadbc",
        "type": "debug",
        "z": "84a1a3d806bd7fe0",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 400,
        "wires": []
    }
]